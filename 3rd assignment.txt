import tkinter as tk
from tkinter import filedialog, messagebox
import matplotlib.pyplot as plt

# --- Function to compute frequencies ---
def compute_relative_frequencies(sequence, window_size=30):
    A_freq, T_freq, C_freq, G_freq = [], [], [], []
    
    for i in range(len(sequence) - window_size + 1):
        window = sequence[i:i + window_size]
        A_freq.append(window.count('A') / window_size)
        T_freq.append(window.count('T') / window_size)
        C_freq.append(window.count('C') / window_size)
        G_freq.append(window.count('G') / window_size)
    
    return A_freq, T_freq, C_freq, G_freq


# --- Function to open file and process ---
def open_file():
    filepath = filedialog.askopenfilename(
        title="Select sequence file",
        filetypes=[("Text Files", "*.txt *.fasta *.fa"), ("All Files", "*.*")]
    )
    if not filepath:
        return

    try:
        with open(filepath, "r") as f:
            content = f.read().upper()
        
        # Remove headers (if fasta format)
        sequence = ''.join([line.strip() for line in content.splitlines() if not line.startswith('>')])
        sequence = ''.join([c for c in sequence if c in 'ATCG'])

        if len(sequence) < 30:
            messagebox.showwarning("Sequence too short", "The sequence must contain at least 30 nucleotides.")
            return

        A_freq, T_freq, C_freq, G_freq = compute_relative_frequencies(sequence, 30)
        
        # --- Plotting the results ---
        plt.figure(figsize=(10, 5))
        plt.plot(A_freq, label='A', linewidth=2)
        plt.plot(T_freq, label='T', linewidth=2)
        plt.plot(C_freq, label='C', linewidth=2)
        plt.plot(G_freq, label='G', linewidth=2)
        plt.xlabel("Window position (sliding index)")
        plt.ylabel("Relative frequency")
        plt.title("Nucleotide Frequency Signals (Window = 30)")
        plt.legend()
        plt.grid(True)
        plt.show()

    except Exception as e:
        messagebox.showerror("Error", f"An error occurred:\n{e}")


# --- GUI Setup ---
root = tk.Tk()
root.title("Nucleotide Frequency Analyzer")
root.geometry("400x200")

label = tk.Label(root, text="DNA Sequence Frequency Analyzer", font=("Arial", 14))
label.pack(pady=20)

open_btn = tk.Button(root, text="Select Sequence File", command=open_file, font=("Arial", 12))
open_btn.pack(pady=10)

info_label = tk.Label(root, text="Window size: 30 bp", font=("Arial", 10))
info_label.pack(pady=5)

root.mainloop()
